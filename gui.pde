/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */
public void volumeSliderChange(GButton source, GEvent event){
  print("hi");
  if (getMediaType(currentFile.getFileType()).equals("Video")){
    fileAsVideo.changeVolume(volumeSlider.getValueF());
  }
  if (getMediaType(currentFile.getFileType()).equals("Audio")){
    fileAsAudio.changeVolume(volumeSlider.getValueF());
  }
}
public void previousMediaButtonClicked(GButton source, GEvent event){
  if (displayIndex > 1){
     if (displayIndex > currentFolder.getFolders().size() + 1){
       if (getMediaType(currentFile.getFileType()).equals("Video")){
         fileAsVideo.paused = false;
         media1.pause();
         media1 = null;
       }
       if(getMediaType(currentFile.getFileType()).equals("Audio")){
          fileAsAudio.paused = false;
          media3.pause();
          media3 = null;
       }
       volumeSlider.setVisible(false);
       pausePlayButton.setVisible(false);
       displayIndex --;
       changeWindow();
     }
  }
}

public void nextMediaButtonClicked(GButton source, GEvent event){
  if (displayIndex < currentFolder.getSize()){
    if(getMediaType(currentFile.getFileType()).equals("Video")){
      fileAsVideo.paused = false;
      media1.pause();
      media1 = null;
    }
    if(getMediaType(currentFile.getFileType()).equals("Audio")){
      fileAsAudio.paused = false;
      media3.pause();
      media3 = null;
    }
    volumeSlider.setVisible(false);
    pausePlayButton.setVisible(false);
    displayIndex ++;
    changeWindow();
   }
  } 
public void pausePlayButtonClicked(GButton source, GEvent event){
  if (getMediaType(currentFile.fileType) == ("Video")){
    fileAsVideo.paused = !fileAsVideo.paused;
    if (fileAsVideo.paused){
      media1.pause();
      pausePlayButton.setText("Play");
    }
    else{
      media1.play();
      pausePlayButton.setText("Pause");
    }
  }
  if (getMediaType(currentFile.fileType) == ("Audio")){
    fileAsAudio.paused = !fileAsAudio.paused;
    if (fileAsAudio.paused){
      media3.pause();
      pausePlayButton.setText("Play");
    }
    else{
      media3.play();
      pausePlayButton.setText("Pause");
    }
  }
}

public void importFileClicked(GButton source, GEvent event) { //_CODE_:importFileButton:738052:
  importFile();
} //_CODE_:importFileButton:738052:

public void createNewFolderClicked(GButton source, GEvent event) { //_CODE_:NewFolder:822673:
  String n = "New Folder" + (currentFolder.getFolders().size() + 1);
  currentFolder.addFolder(n);
} //_CODE_:NewFolder:822673:

public void nameChange(GTextField source, GEvent event) { //_CODE_:textfield1:322137:
  if (event == GEvent.ENTERED || event == GEvent.LOST_FOCUS){
    renameSelectedItem(fileRenamingField.getText());
    fileRenamingField.dispose();
    fileRenamingField = null;
  }
} //_CODE_:textfield1:322137:

public void searchChange(GTextField source, GEvent event) { //_CODE_:textfield1:322137:
  if (event == GEvent.ENTERED || event == GEvent.LOST_FOCUS){
    currentFolder.setKey(FileSortKey.SEARCH);
    currentFolder.sort();
    redraw();
  }
} //_CODE_:textfield1:322137:

public void renameButtonClicked(GButton source, GEvent event) { //_CODE_:NewFolder:822673:
  if (selectedIndex > 0){
    int yCoordinate = toolbarHeight + (selectedIndex * buttonHeight);
    fileRenamingField = new GTextField(this, buttonWidth * 2, yCoordinate, width - buttonWidth * 2, buttonHeight, G4P.SCROLLBARS_NONE);
    fileRenamingField.setOpaque(false);
    fileRenamingField.addEventHandler(this, "nameChange");
    fileRenamingField.setFocus(true);
  }
} //_CODE_:NewFolder:822673:

public void openMediaClicked(GButton source, GEvent event) { //_CODE_:OpenMedia:789457:
  openSelectedItem();
} //_CODE_:OpenMedia:789457:

public void deleteFileClicked(GButton source, GEvent event) { //_CODE_:button2:772053:
  deleteSelectedFile();
} //_CODE_:button2:772053:

// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.setInputFont("Arial", G4P.PLAIN, 14);
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  importFileButton = new GButton(this, width - buttonWidth * 5, buttonHeight / 2, buttonWidth, buttonHeight);
  importFileButton.setText("Import File");
  importFileButton.addEventHandler(this, "importFileClicked");

  // "New Folder" button
  newFolderButton = new GButton(this, width - buttonWidth * 4, buttonHeight / 2, buttonWidth, buttonHeight);
  newFolderButton.setText("New Folder");
  newFolderButton.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  newFolderButton.addEventHandler(this, "createNewFolderClicked");


  renameObjectButton = new GButton(this, width - buttonWidth * 3, buttonHeight / 2, buttonWidth, buttonHeight);
  renameObjectButton.setText("Rename");
  renameObjectButton.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  renameObjectButton.addEventHandler(this, "renameButtonClicked");
  
  // "Open file" button
  openMediaButton = new GButton(this, width - buttonWidth * 2, buttonHeight / 2, buttonWidth, buttonHeight);
  openMediaButton.setText("Open");
  openMediaButton.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  //openMediaButton.setLocalColorScheme(GCScheme.SCHEME_10);
  openMediaButton.addEventHandler(this, "openMediaClicked");


  // "Delete file" button
  deleteMediaButton = new GButton(this, width - buttonWidth, buttonHeight / 2, buttonWidth, buttonHeight);
  deleteMediaButton.setText("Delete");
  deleteMediaButton.setLocalColorScheme(GCScheme.RED_SCHEME);
  deleteMediaButton.addEventHandler(this, "deleteFileClicked");

  fileSearchingField = new GTextField(this, buttonWidth * 2, buttonHeight / 2, width - buttonWidth * 7, buttonHeight);
  fileSearchingField.setOpaque(false);
  fileSearchingField.addEventHandler(this, "searchChange");
}

// Variable declarations 
// autogenerated do not edit
GSlider volumeSlider;
GButton importFileButton; 
GButton renameObjectButton; 
GButton newFolderButton; 
GButton openMediaButton; 
GButton deleteMediaButton; 
GTextField fileRenamingField;
GTextField fileSearchingField;
